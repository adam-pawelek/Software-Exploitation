	.file	"array.c"
	.text
	.section	.rodata
.LC0:
	.string	"int"
.LC1:
	.string	"foo"
	.align 8
.LC2:
	.string	"%s: length=%zu sizeof(%s)=%zu sizeof(%s)=%zu\n"
.LC3:
	.string	"char"
.LC4:
	.string	"bar"
.LC5:
	.string	"char *"
.LC6:
	.string	"baz"
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movl	%edi, -68(%rbp)
	movq	%rsi, -80(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$1, -48(%rbp)
	movl	$2, -44(%rbp)
	movl	$3, -40(%rbp)
	movl	$4, -36(%rbp)
	movl	$5, -32(%rbp)
	subq	$8, %rsp
	pushq	$4
	leaq	.LC0(%rip), %r9
	movl	$20, %r8d
	leaq	.LC1(%rip), %rcx
	movl	$5, %edx
	leaq	.LC1(%rip), %rsi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	addq	$16, %rsp
	movl	$1819043144, -14(%rbp)
	movw	$111, -10(%rbp)
	subq	$8, %rsp
	pushq	$1
	leaq	.LC3(%rip), %r9
	movl	$6, %r8d
	leaq	.LC4(%rip), %rcx
	movl	$6, %edx
	leaq	.LC4(%rip), %rsi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	addq	$16, %rsp
	leaq	-14(%rbp), %rax
	movq	%rax, -56(%rbp)
	subq	$8, %rsp
	pushq	$8
	leaq	.LC5(%rip), %r9
	movl	$8, %r8d
	leaq	.LC6(%rip), %rcx
	movl	$1, %edx
	leaq	.LC6(%rip), %rsi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	addq	$16, %rsp
	movl	$0, %eax
	movq	-8(%rbp), %rdx
	xorq	%fs:40, %rdx
	je	.L3
	call	__stack_chk_fail@PLT
.L3:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	 1f - 0f
	.long	 4f - 1f
	.long	 5
0:
	.string	 "GNU"
1:
	.align 8
	.long	 0xc0000002
	.long	 3f - 2f
2:
	.long	 0x3
3:
	.align 8
4:
